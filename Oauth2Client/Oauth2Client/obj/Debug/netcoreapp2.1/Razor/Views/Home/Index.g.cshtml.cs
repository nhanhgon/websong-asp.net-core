#pragma checksum "C:\Users\xuan hung\source\repos\Oauth2Client\Oauth2Client\Views\Home\Index.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "ad11457866a213d4d042d1e70faac5a91b2b936e"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Home_Index), @"mvc.1.0.view", @"/Views/Home/Index.cshtml")]
[assembly:global::Microsoft.AspNetCore.Mvc.Razor.Compilation.RazorViewAttribute(@"/Views/Home/Index.cshtml", typeof(AspNetCore.Views_Home_Index))]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#line 1 "C:\Users\xuan hung\source\repos\Oauth2Client\Oauth2Client\Views\_ViewImports.cshtml"
using Oauth2Client;

#line default
#line hidden
#line 2 "C:\Users\xuan hung\source\repos\Oauth2Client\Oauth2Client\Views\_ViewImports.cshtml"
using Oauth2Client.Models;

#line default
#line hidden
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"ad11457866a213d4d042d1e70faac5a91b2b936e", @"/Views/Home/Index.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"2920f74c5505c5e43fd288669a4ea4a462f553d7", @"/Views/_ViewImports.cshtml")]
    public class Views_Home_Index : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#line 1 "C:\Users\xuan hung\source\repos\Oauth2Client\Oauth2Client\Views\Home\Index.cshtml"
  
    ViewData["Title"] = "Home Page";

#line default
#line hidden
            BeginContext(45, 101, true);
            WriteLiteral("<h1>Oauth2 Client</h1>\r\n<button class=\"btn btn-default\" id=\"get-permission\">Get Permission</button>\r\n");
            EndContext();
            BeginContext(799, 2508, true);
            WriteLiteral(@"<script>
    var OAUTH2_SERVER = ""https://oauth2serverapt.azurewebsites.net"";
    var OAUTH2_AUTHORIZATION_URI = ""/Oauth2/Authorization"";
    var OAUTH2_EXCHANGE_TOKEN_URI = ""/Oauth2/ExchangeToken"";
    var CLIENT_ID = ""32fbe4cd-d1ec-476b-956e-252df3915fa3"";
    var SCOPES = ""http://basicscope.com, http://songresourcescope.com"";

    var RESOURCE_SERVER = ""https://oauth2resourceserver.azurewebsites.net"";
    var RESOURCE_SONG_URI = ""/api/songs"";
    document.addEventListener(""DOMContentLoaded"", function () {

        document.getElementById(""get-permission"").onclick = getPermission;
        var url = new URL(location.href);
        var exchangeCode = url.searchParams.get(""code"");
        if (exchangeCode) {
            exchangeToken(exchangeCode);
        } else {
            loadSongFromResourceServer();
        }       
    });

    function loadSongFromResourceServer(parameters) {
        var token = localStorage.getItem(""access-token"");
        if (!token) {
            getPermissi");
            WriteLiteral(@"on();
        }
        var xhr = new XMLHttpRequest();
        xhr.onreadystatechange = function () {
            if (this.readyState === 4 && this.status === 200) {
                alert(this.responseText);
            } else if (this.readyState === 4 && this.status === 404) {
                alert(""Bad request"");
            } else if (this.readyState === 4 && this.status === 403) {
                alert(""Forbidden"");
                getPermission();
            }
        };
        xhr.open(""GET"", RESOURCE_SERVER + RESOURCE_SONG_URI, true);
        xhr.setRequestHeader(""Authorization"", ""Basic "" + token);
        xhr.send();
    }

    function getPermission() {
        location.href = OAUTH2_SERVER + OAUTH2_AUTHORIZATION_URI + ""?clientId="" + CLIENT_ID + ""&scopes="" + SCOPES;
    }

    function exchangeToken(exchangeCode) {
        var xhr = new XMLHttpRequest();
        xhr.onreadystatechange = function () {
            if (this.readyState === 4 && this.status === 200) {
        ");
            WriteLiteral(@"        var credential = JSON.parse(this.responseText);
                localStorage.setItem(""access-token"", credential.accessToken);
            } else if (this.readyState === 4 && this.status === 404) {
                alert(""Invalid code"");                    
            }
        };
        xhr.open(""GET"", OAUTH2_SERVER + OAUTH2_EXCHANGE_TOKEN_URI + ""?exchangeCode="" + exchangeCode, true);            
        xhr.send();
    }   
</script>

");
            EndContext();
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
